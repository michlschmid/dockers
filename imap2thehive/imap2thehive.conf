###################################################
#
# All about I M A P - Email  Connectivity
#
[imap]

# Hostname of IP of your IMAP mail server.
host: 192.168.0.1

# TCP Port to use for the IMAP connection:
# * 143: Unencrypted (legacy)
# * 993: Encrypted (default)
port: 993

# Credentials for logging into your mailbox.
user: "me@my-server.com"
password: secret

# Foldername in your Mailbox that shall be scanned for unread emails as input/source for this script.
folder: TheHive

# Shall processed emails be deleted from the mailbox folder?
# Default is false.
# Every successfully processed email is marked as "read" by the script anyways.
expunge: false

# To not process "spam messages" you can specify which email flags mark "spam" in your mail system. 
spam: (X-Spam-Flag: YES)



###################################################
#
# All about T H E  H I V E  Connectivity
#
[thehive]

# Always specify the connection to you TheHive instance in URL form.
# => Take special care of this when using an IP instead of a hostname.
url: http://192.168.0.2:9000

# API-Key of a legitimate TheHive user.
# => Take care of the users ability to create alerts in your TheHive user config.
apikey: YOUR-API-KEY

# Whether to generally add observables (cases) / artifacts (alerts) like:
# * URLs
# * IPs
# * Email Attachments
# * ...
# from the processed email or not. 
observables: true

# Filename of the "whitelist" containing REGEXes to block known good contents from being added as observable or artifact.
whitelists: imap2thehive.whitelists



###################################################
#
# Define custom mail handlers for custom
# Mail to => TheHive conversion
#
[mailhandler]
keywords: "CSW"



###################################################
#
# All about "default" A L E R T s
#
[alert]

# TLP level added to the generated case.
tlp: 3

# Tags added to the generated case.
tags: email

# This is a REGEX query that must match from the beginning of the subject string (lefthand side) (re.match).
# This is NOT a search query that searches for ANY occurence of the REGEX in the subject string.
keywords: \S*(ALERT|VTMIS)\S*



###################################################
#
# All about "default" C A S E s
#
[case]
# TLP level added to the generated case.
tlp: 3
# Tags added to the generated case.
tags: email
# Either specify an existing TheHive "case template name" (preferred)
# or specify custom case tasks here to be added to the case.
# If both variables are set the "template" value will be used.
#tasks: Investigation,Communication,Tracking
template: Name-Of-Your-CaseTemplate-in-TheHive
# ???
files: application/pdf


###################################################
#
# Custom O B S E R V A B L E s definitions
#
# Custom enrichments from your known contents like:
# * EDR/AV Messages Alerts
# * SIEM / Logging Stack
# * IDS/IPS
# * ...
#
[custom_observables]
ossec_asset: Received From: \((\w+)\)\s
ossec_level: Rule: \w+ fired \(level (\d+)\)\s-
ossec_message: Rule: \w+ fired \(level \d+\)\s-> "(.*)"
ossec_rule: Rule: (\d+) fired \(level

###################################################
#
# All about L O G G I N G and F I L E handling
#
[loggers]
keys=root,imap2thehive

[handlers]
keys=console,file

[formatters]
keys=simple,console

[logger_root]
level=INFO
handlers=console

[logger_imap2thehive]
level=DEBUG
handlers=file
propagate=1
qualname=imap2thehive

[handler_console]
class=StreamHandler
formatter=console
level=DEBUG
args=(sys.stdout,)

[handler_file]
class=FileHandler
level=WARNING
formatter=simple
# Logfile path:
args=('./imap2thehive.log', 'w')

[formatter_simple]
format=%(asctime)s %(levelname)s %(message)s

[formatter_console]
format=[%(levelname)s]: %(message)s